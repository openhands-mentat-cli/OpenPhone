{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspace/openhands-mentat-cli_OpenPhone/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14;import React,{useState,useEffect,useCallback}from'react';import styled from'styled-components';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MonitorContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: linear-gradient(145deg, #2d2d2d, #1a1a1a);\\n  border-radius: 12px;\\n  padding: 20px;\\n  margin: 20px 0;\\n  border: 1px solid #444;\\n\"])));const MonitorHeader=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: between;\\n  align-items: center;\\n  margin-bottom: 20px;\\n\"])));const MonitorTitle=styled.h3(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin: 0;\\n  color: #4CAF50;\\n  font-size: 16px;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n\"])));const RefreshButton=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  background: linear-gradient(145deg, #555, #444);\\n  color: white;\\n  border: none;\\n  padding: 6px 12px;\\n  border-radius: 6px;\\n  cursor: pointer;\\n  font-size: 12px;\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    background: linear-gradient(145deg, #666, #555);\\n  }\\n\"])));const MetricsGrid=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n  gap: 15px;\\n  margin-bottom: 20px;\\n\"])));const MetricCard=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  background: linear-gradient(145deg, #1a1a1a, #222);\\n  border: 1px solid #333;\\n  border-radius: 8px;\\n  padding: 15px;\\n\"])));const MetricTitle=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  color: #ccc;\\n  font-size: 12px;\\n  font-weight: bold;\\n  margin-bottom: 8px;\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n\"])));const MetricValue=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 20px;\\n  font-weight: bold;\\n  margin-bottom: 4px;\\n\"])),props=>props.warning?'#FF9800':props.critical?'#f44336':'#4CAF50');const MetricSubtext=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  color: #888;\\n  font-size: 11px;\\n\"])));const ProgressBar=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 8px;\\n  background: #333;\\n  border-radius: 4px;\\n  overflow: hidden;\\n  margin-top: 8px;\\n\"])));const ProgressFill=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  height: 100%;\\n  background: \",\";\\n  width: \",\"%;\\n  transition: all 0.3s ease;\\n\"])),props=>props.percentage>90?'#f44336':props.percentage>70?'#FF9800':'#4CAF50',props=>props.percentage);const PhoneMetrics=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  margin-top: 20px;\\n\"])));const PhoneMetricRow=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  padding: 8px 0;\\n  border-bottom: 1px solid #333;\\n  \\n  &:last-child {\\n    border-bottom: none;\\n  }\\n\"])));const PhoneName=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  color: white;\\n  font-weight: bold;\\n  font-size: 14px;\\n\"])));const PhoneStatus=styled.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  padding: 4px 8px;\\n  border-radius: 12px;\\n  font-size: 11px;\\n  font-weight: bold;\\n  background: \",\";\\n  color: white;\\n  margin: 0 10px;\\n\"])),props=>props.running?'#4CAF50':'#666');const PhoneMetric=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  color: #ccc;\\n  font-size: 12px;\\n  min-width: 80px;\\n  text-align: right;\\n\"])));const SystemMonitor=_ref=>{let{phones}=_ref;const[systemMetrics,setSystemMetrics]=useState({cpu:{usage:0,cores:0},memory:{used:0,total:0,free:0},disk:{used:0,total:0,free:0},network:{download:0,upload:0},uptime:0});const[phoneMetrics,setPhoneMetrics]=useState({});const[loading,setLoading]=useState(false);const[lastUpdate,setLastUpdate]=useState(null);const fetchMetrics=useCallback(async()=>{setLoading(true);try{// Simulate system metrics (in production, get from backend API)\nconst mockSystemMetrics={cpu:{usage:Math.random()*100,cores:8},memory:{used:Math.random()*16384,total:16384,free:16384-Math.random()*16384},disk:{used:Math.random()*500,total:1000,free:1000-Math.random()*500},network:{download:Math.random()*100,upload:Math.random()*50},uptime:Date.now()-Math.random()*86400000// Random uptime up to 24h\n};setSystemMetrics(mockSystemMetrics);// Generate phone-specific metrics\nconst phoneMetricsData={};phones.forEach(phone=>{var _phone$status,_phone$status2,_phone$status3,_phone$status4;phoneMetricsData[phone.id]={cpu:(_phone$status=phone.status)!==null&&_phone$status!==void 0&&_phone$status.running?Math.random()*100:0,memory:(_phone$status2=phone.status)!==null&&_phone$status2!==void 0&&_phone$status2.running?Math.random()*4096:0,network:(_phone$status3=phone.status)!==null&&_phone$status3!==void 0&&_phone$status3.running?Math.random()*50:0,uptime:(_phone$status4=phone.status)!==null&&_phone$status4!==void 0&&_phone$status4.running?Math.random()*3600000:0};});setPhoneMetrics(phoneMetricsData);setLastUpdate(new Date());}catch(error){console.error('Failed to fetch metrics:',error);}finally{setLoading(false);}},[phones]);useEffect(()=>{fetchMetrics();const interval=setInterval(fetchMetrics,10000);// Update every 10 seconds\nreturn()=>clearInterval(interval);},[fetchMetrics]);const formatBytes=bytes=>{if(bytes===0)return'0 B';const k=1024;const sizes=['B','KB','MB','GB','TB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(1))+' '+sizes[i];};const formatUptime=ms=>{const seconds=Math.floor(ms/1000);const minutes=Math.floor(seconds/60);const hours=Math.floor(minutes/60);const days=Math.floor(hours/24);if(days>0)return\"\".concat(days,\"d \").concat(hours%24,\"h\");if(hours>0)return\"\".concat(hours,\"h \").concat(minutes%60,\"m\");if(minutes>0)return\"\".concat(minutes,\"m \").concat(seconds%60,\"s\");return\"\".concat(seconds,\"s\");};const memoryUsagePercent=systemMetrics.memory.used/systemMetrics.memory.total*100;const diskUsagePercent=systemMetrics.disk.used/systemMetrics.disk.total*100;return/*#__PURE__*/_jsxs(MonitorContainer,{children:[/*#__PURE__*/_jsxs(MonitorHeader,{children:[/*#__PURE__*/_jsx(MonitorTitle,{children:\"\\uD83D\\uDCCA System Monitor\"}),/*#__PURE__*/_jsxs(RefreshButton,{onClick:fetchMetrics,disabled:loading,children:[loading?'🔄':'↻',\" Refresh\"]})]}),/*#__PURE__*/_jsxs(MetricsGrid,{children:[/*#__PURE__*/_jsxs(MetricCard,{children:[/*#__PURE__*/_jsx(MetricTitle,{children:\"\\uD83D\\uDDA5\\uFE0F CPU Usage\"}),/*#__PURE__*/_jsxs(MetricValue,{warning:systemMetrics.cpu.usage>70,critical:systemMetrics.cpu.usage>90,children:[systemMetrics.cpu.usage.toFixed(1),\"%\"]}),/*#__PURE__*/_jsxs(MetricSubtext,{children:[systemMetrics.cpu.cores,\" cores available\"]}),/*#__PURE__*/_jsx(ProgressBar,{children:/*#__PURE__*/_jsx(ProgressFill,{percentage:systemMetrics.cpu.usage})})]}),/*#__PURE__*/_jsxs(MetricCard,{children:[/*#__PURE__*/_jsx(MetricTitle,{children:\"\\uD83D\\uDCBE Memory Usage\"}),/*#__PURE__*/_jsxs(MetricValue,{warning:memoryUsagePercent>70,critical:memoryUsagePercent>90,children:[memoryUsagePercent.toFixed(1),\"%\"]}),/*#__PURE__*/_jsxs(MetricSubtext,{children:[formatBytes(systemMetrics.memory.used),\" / \",formatBytes(systemMetrics.memory.total)]}),/*#__PURE__*/_jsx(ProgressBar,{children:/*#__PURE__*/_jsx(ProgressFill,{percentage:memoryUsagePercent})})]}),/*#__PURE__*/_jsxs(MetricCard,{children:[/*#__PURE__*/_jsx(MetricTitle,{children:\"\\uD83D\\uDCBF Disk Usage\"}),/*#__PURE__*/_jsxs(MetricValue,{warning:diskUsagePercent>80,critical:diskUsagePercent>95,children:[diskUsagePercent.toFixed(1),\"%\"]}),/*#__PURE__*/_jsxs(MetricSubtext,{children:[formatBytes(systemMetrics.disk.used*1024*1024*1024),\" /\",formatBytes(systemMetrics.disk.total*1024*1024*1024)]}),/*#__PURE__*/_jsx(ProgressBar,{children:/*#__PURE__*/_jsx(ProgressFill,{percentage:diskUsagePercent})})]}),/*#__PURE__*/_jsxs(MetricCard,{children:[/*#__PURE__*/_jsx(MetricTitle,{children:\"\\uD83C\\uDF10 Network Activity\"}),/*#__PURE__*/_jsxs(MetricValue,{children:[\"\\u2193 \",systemMetrics.network.download.toFixed(1),\" MB/s\"]}),/*#__PURE__*/_jsxs(MetricSubtext,{children:[\"\\u2191 \",systemMetrics.network.upload.toFixed(1),\" MB/s\"]})]}),/*#__PURE__*/_jsxs(MetricCard,{children:[/*#__PURE__*/_jsx(MetricTitle,{children:\"\\u23F1\\uFE0F System Uptime\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatUptime(systemMetrics.uptime)}),/*#__PURE__*/_jsxs(MetricSubtext,{children:[\"Last restart: \",new Date(Date.now()-systemMetrics.uptime).toLocaleDateString()]})]}),/*#__PURE__*/_jsxs(MetricCard,{children:[/*#__PURE__*/_jsx(MetricTitle,{children:\"\\uD83D\\uDCF1 Active Phones\"}),/*#__PURE__*/_jsxs(MetricValue,{children:[phones.filter(p=>{var _p$status;return(_p$status=p.status)===null||_p$status===void 0?void 0:_p$status.running;}).length,\" / \",phones.length]}),/*#__PURE__*/_jsx(MetricSubtext,{children:phones.length===0?'No phones created':\"\".concat(phones.length,\" total phones\")})]})]}),phones.length>0&&/*#__PURE__*/_jsxs(PhoneMetrics,{children:[/*#__PURE__*/_jsx(MetricTitle,{style:{marginBottom:'10px'},children:\"\\uD83D\\uDCF1 Phone Performance\"}),phones.map(phone=>{var _phone$status5,_phone$status6,_phone$status7;return/*#__PURE__*/_jsxs(PhoneMetricRow,{children:[/*#__PURE__*/_jsx(PhoneName,{children:phone.name}),/*#__PURE__*/_jsx(PhoneStatus,{running:(_phone$status5=phone.status)===null||_phone$status5===void 0?void 0:_phone$status5.running,children:(_phone$status6=phone.status)!==null&&_phone$status6!==void 0&&_phone$status6.running?'Running':'Stopped'}),((_phone$status7=phone.status)===null||_phone$status7===void 0?void 0:_phone$status7.running)&&phoneMetrics[phone.id]&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(PhoneMetric,{children:[\"CPU: \",phoneMetrics[phone.id].cpu.toFixed(1),\"%\"]}),/*#__PURE__*/_jsxs(PhoneMetric,{children:[\"RAM: \",formatBytes(phoneMetrics[phone.id].memory*1024*1024)]}),/*#__PURE__*/_jsxs(PhoneMetric,{children:[\"Net: \",phoneMetrics[phone.id].network.toFixed(1),\" MB/s\"]}),/*#__PURE__*/_jsxs(PhoneMetric,{children:[\"Up: \",formatUptime(phoneMetrics[phone.id].uptime)]})]})]},phone.id);})]}),lastUpdate&&/*#__PURE__*/_jsxs(MetricSubtext,{style:{textAlign:'center',marginTop:'15px'},children:[\"Last updated: \",lastUpdate.toLocaleTimeString()]})]});};export default SystemMonitor;","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MonitorContainer","div","_templateObject","_taggedTemplateLiteral","MonitorHeader","_templateObject2","MonitorTitle","h3","_templateObject3","RefreshButton","button","_templateObject4","MetricsGrid","_templateObject5","MetricCard","_templateObject6","MetricTitle","_templateObject7","MetricValue","_templateObject8","props","warning","critical","MetricSubtext","_templateObject9","ProgressBar","_templateObject0","ProgressFill","_templateObject1","percentage","PhoneMetrics","_templateObject10","PhoneMetricRow","_templateObject11","PhoneName","_templateObject12","PhoneStatus","_templateObject13","running","PhoneMetric","_templateObject14","SystemMonitor","_ref","phones","systemMetrics","setSystemMetrics","cpu","usage","cores","memory","used","total","free","disk","network","download","upload","uptime","phoneMetrics","setPhoneMetrics","loading","setLoading","lastUpdate","setLastUpdate","fetchMetrics","mockSystemMetrics","Math","random","Date","now","phoneMetricsData","forEach","phone","_phone$status","_phone$status2","_phone$status3","_phone$status4","id","status","error","console","interval","setInterval","clearInterval","formatBytes","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","formatUptime","ms","seconds","minutes","hours","days","concat","memoryUsagePercent","diskUsagePercent","children","onClick","disabled","toLocaleDateString","filter","p","_p$status","length","style","marginBottom","map","_phone$status5","_phone$status6","_phone$status7","name","textAlign","marginTop","toLocaleTimeString"],"sources":["/workspace/openhands-mentat-cli_OpenPhone/frontend/src/components/SystemMonitor.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst MonitorContainer = styled.div`\n  background: linear-gradient(145deg, #2d2d2d, #1a1a1a);\n  border-radius: 12px;\n  padding: 20px;\n  margin: 20px 0;\n  border: 1px solid #444;\n`;\n\nconst MonitorHeader = styled.div`\n  display: flex;\n  justify-content: between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst MonitorTitle = styled.h3`\n  margin: 0;\n  color: #4CAF50;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst RefreshButton = styled.button`\n  background: linear-gradient(145deg, #555, #444);\n  color: white;\n  border: none;\n  padding: 6px 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 12px;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: linear-gradient(145deg, #666, #555);\n  }\n`;\n\nconst MetricsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 15px;\n  margin-bottom: 20px;\n`;\n\nconst MetricCard = styled.div`\n  background: linear-gradient(145deg, #1a1a1a, #222);\n  border: 1px solid #333;\n  border-radius: 8px;\n  padding: 15px;\n`;\n\nconst MetricTitle = styled.div`\n  color: #ccc;\n  font-size: 12px;\n  font-weight: bold;\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n\nconst MetricValue = styled.div`\n  color: ${props => \n    props.warning ? '#FF9800' :\n    props.critical ? '#f44336' :\n    '#4CAF50'\n  };\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 4px;\n`;\n\nconst MetricSubtext = styled.div`\n  color: #888;\n  font-size: 11px;\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 8px;\n  background: #333;\n  border-radius: 4px;\n  overflow: hidden;\n  margin-top: 8px;\n`;\n\nconst ProgressFill = styled.div`\n  height: 100%;\n  background: ${props => \n    props.percentage > 90 ? '#f44336' :\n    props.percentage > 70 ? '#FF9800' :\n    '#4CAF50'\n  };\n  width: ${props => props.percentage}%;\n  transition: all 0.3s ease;\n`;\n\nconst PhoneMetrics = styled.div`\n  margin-top: 20px;\n`;\n\nconst PhoneMetricRow = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #333;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst PhoneName = styled.div`\n  flex: 1;\n  color: white;\n  font-weight: bold;\n  font-size: 14px;\n`;\n\nconst PhoneStatus = styled.div`\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 11px;\n  font-weight: bold;\n  background: ${props => props.running ? '#4CAF50' : '#666'};\n  color: white;\n  margin: 0 10px;\n`;\n\nconst PhoneMetric = styled.div`\n  color: #ccc;\n  font-size: 12px;\n  min-width: 80px;\n  text-align: right;\n`;\n\nconst SystemMonitor = ({ phones }) => {\n  const [systemMetrics, setSystemMetrics] = useState({\n    cpu: { usage: 0, cores: 0 },\n    memory: { used: 0, total: 0, free: 0 },\n    disk: { used: 0, total: 0, free: 0 },\n    network: { download: 0, upload: 0 },\n    uptime: 0\n  });\n  const [phoneMetrics, setPhoneMetrics] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  const fetchMetrics = useCallback(async () => {\n    setLoading(true);\n    try {\n      // Simulate system metrics (in production, get from backend API)\n      const mockSystemMetrics = {\n        cpu: { \n          usage: Math.random() * 100, \n          cores: 8 \n        },\n        memory: { \n          used: Math.random() * 16384, \n          total: 16384, \n          free: 16384 - Math.random() * 16384 \n        },\n        disk: { \n          used: Math.random() * 500, \n          total: 1000, \n          free: 1000 - Math.random() * 500 \n        },\n        network: { \n          download: Math.random() * 100, \n          upload: Math.random() * 50 \n        },\n        uptime: Date.now() - (Math.random() * 86400000) // Random uptime up to 24h\n      };\n      \n      setSystemMetrics(mockSystemMetrics);\n      \n      // Generate phone-specific metrics\n      const phoneMetricsData = {};\n      phones.forEach(phone => {\n        phoneMetricsData[phone.id] = {\n          cpu: phone.status?.running ? Math.random() * 100 : 0,\n          memory: phone.status?.running ? Math.random() * 4096 : 0,\n          network: phone.status?.running ? Math.random() * 50 : 0,\n          uptime: phone.status?.running ? Math.random() * 3600000 : 0\n        };\n      });\n      \n      setPhoneMetrics(phoneMetricsData);\n      setLastUpdate(new Date());\n      \n    } catch (error) {\n      console.error('Failed to fetch metrics:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [phones]);\n\n  useEffect(() => {\n    fetchMetrics();\n    const interval = setInterval(fetchMetrics, 10000); // Update every 10 seconds\n    return () => clearInterval(interval);\n  }, [fetchMetrics]);\n\n  const formatBytes = (bytes) => {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n  };\n\n  const formatUptime = (ms) => {\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    \n    if (days > 0) return `${days}d ${hours % 24}h`;\n    if (hours > 0) return `${hours}h ${minutes % 60}m`;\n    if (minutes > 0) return `${minutes}m ${seconds % 60}s`;\n    return `${seconds}s`;\n  };\n\n  const memoryUsagePercent = (systemMetrics.memory.used / systemMetrics.memory.total) * 100;\n  const diskUsagePercent = (systemMetrics.disk.used / systemMetrics.disk.total) * 100;\n\n  return (\n    <MonitorContainer>\n      <MonitorHeader>\n        <MonitorTitle>\n          📊 System Monitor\n        </MonitorTitle>\n        <RefreshButton onClick={fetchMetrics} disabled={loading}>\n          {loading ? '🔄' : '↻'} Refresh\n        </RefreshButton>\n      </MonitorHeader>\n\n      <MetricsGrid>\n        <MetricCard>\n          <MetricTitle>\n            🖥️ CPU Usage\n          </MetricTitle>\n          <MetricValue \n            warning={systemMetrics.cpu.usage > 70}\n            critical={systemMetrics.cpu.usage > 90}\n          >\n            {systemMetrics.cpu.usage.toFixed(1)}%\n          </MetricValue>\n          <MetricSubtext>{systemMetrics.cpu.cores} cores available</MetricSubtext>\n          <ProgressBar>\n            <ProgressFill percentage={systemMetrics.cpu.usage} />\n          </ProgressBar>\n        </MetricCard>\n\n        <MetricCard>\n          <MetricTitle>\n            💾 Memory Usage\n          </MetricTitle>\n          <MetricValue \n            warning={memoryUsagePercent > 70}\n            critical={memoryUsagePercent > 90}\n          >\n            {memoryUsagePercent.toFixed(1)}%\n          </MetricValue>\n          <MetricSubtext>\n            {formatBytes(systemMetrics.memory.used)} / {formatBytes(systemMetrics.memory.total)}\n          </MetricSubtext>\n          <ProgressBar>\n            <ProgressFill percentage={memoryUsagePercent} />\n          </ProgressBar>\n        </MetricCard>\n\n        <MetricCard>\n          <MetricTitle>\n            💿 Disk Usage\n          </MetricTitle>\n          <MetricValue \n            warning={diskUsagePercent > 80}\n            critical={diskUsagePercent > 95}\n          >\n            {diskUsagePercent.toFixed(1)}%\n          </MetricValue>\n          <MetricSubtext>\n            {formatBytes(systemMetrics.disk.used * 1024 * 1024 * 1024)} / \n            {formatBytes(systemMetrics.disk.total * 1024 * 1024 * 1024)}\n          </MetricSubtext>\n          <ProgressBar>\n            <ProgressFill percentage={diskUsagePercent} />\n          </ProgressBar>\n        </MetricCard>\n\n        <MetricCard>\n          <MetricTitle>\n            🌐 Network Activity\n          </MetricTitle>\n          <MetricValue>\n            ↓ {systemMetrics.network.download.toFixed(1)} MB/s\n          </MetricValue>\n          <MetricSubtext>\n            ↑ {systemMetrics.network.upload.toFixed(1)} MB/s\n          </MetricSubtext>\n        </MetricCard>\n\n        <MetricCard>\n          <MetricTitle>\n            ⏱️ System Uptime\n          </MetricTitle>\n          <MetricValue>\n            {formatUptime(systemMetrics.uptime)}\n          </MetricValue>\n          <MetricSubtext>\n            Last restart: {new Date(Date.now() - systemMetrics.uptime).toLocaleDateString()}\n          </MetricSubtext>\n        </MetricCard>\n\n        <MetricCard>\n          <MetricTitle>\n            📱 Active Phones\n          </MetricTitle>\n          <MetricValue>\n            {phones.filter(p => p.status?.running).length} / {phones.length}\n          </MetricValue>\n          <MetricSubtext>\n            {phones.length === 0 ? 'No phones created' : `${phones.length} total phones`}\n          </MetricSubtext>\n        </MetricCard>\n      </MetricsGrid>\n\n      {phones.length > 0 && (\n        <PhoneMetrics>\n          <MetricTitle style={{ marginBottom: '10px' }}>\n            📱 Phone Performance\n          </MetricTitle>\n          {phones.map(phone => (\n            <PhoneMetricRow key={phone.id}>\n              <PhoneName>{phone.name}</PhoneName>\n              <PhoneStatus running={phone.status?.running}>\n                {phone.status?.running ? 'Running' : 'Stopped'}\n              </PhoneStatus>\n              {phone.status?.running && phoneMetrics[phone.id] && (\n                <>\n                  <PhoneMetric>\n                    CPU: {phoneMetrics[phone.id].cpu.toFixed(1)}%\n                  </PhoneMetric>\n                  <PhoneMetric>\n                    RAM: {formatBytes(phoneMetrics[phone.id].memory * 1024 * 1024)}\n                  </PhoneMetric>\n                  <PhoneMetric>\n                    Net: {phoneMetrics[phone.id].network.toFixed(1)} MB/s\n                  </PhoneMetric>\n                  <PhoneMetric>\n                    Up: {formatUptime(phoneMetrics[phone.id].uptime)}\n                  </PhoneMetric>\n                </>\n              )}\n            </PhoneMetricRow>\n          ))}\n        </PhoneMetrics>\n      )}\n\n      {lastUpdate && (\n        <MetricSubtext style={{ textAlign: 'center', marginTop: '15px' }}>\n          Last updated: {lastUpdate.toLocaleTimeString()}\n        </MetricSubtext>\n      )}\n    </MonitorContainer>\n  );\n};\n\nexport default SystemMonitor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}