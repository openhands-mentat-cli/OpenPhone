{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspace/openhands-mentat-cli_OpenPhone/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;import React,{useState,useCallback}from'react';import styled from'styled-components';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const BatchContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  padding: 10px 15px;\\n  background: linear-gradient(145deg, #2a2a2a, #1a1a1a);\\n  border-radius: 8px;\\n  border: 1px solid #444;\\n  margin: 10px 0;\\n\"])));const BatchSelect=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  color: #ccc;\\n  font-size: 12px;\\n\"])));const SelectAllCheckbox=styled.input(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 16px;\\n  height: 16px;\\n  accent-color: #4CAF50;\\n  cursor: pointer;\\n\"])));const BatchActions=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 8px;\\n  margin-left: auto;\\n\"])));const BatchButton=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  color: white;\\n  border: none;\\n  padding: 6px 12px;\\n  border-radius: 6px;\\n  cursor: pointer;\\n  font-size: 11px;\\n  font-weight: bold;\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    transform: translateY(-1px);\\n    box-shadow: 0 2px 8px rgba(0,0,0,0.3);\\n  }\\n  \\n  &:active {\\n    transform: translateY(0);\\n  }\\n  \\n  &:disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed;\\n    transform: none;\\n  }\\n\"])),props=>props.start?'linear-gradient(145deg, #4CAF50, #45a049)':props.stop?'linear-gradient(145deg, #f44336, #da190b)':props.delete?'linear-gradient(145deg, #FF9800, #F57C00)':'linear-gradient(145deg, #2196F3, #1976D2)');const BatchCount=styled.span(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  color: #4CAF50;\\n  font-weight: bold;\\n\"])));const QuickActions=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 6px;\\n  margin-left: 10px;\\n\"])));const QuickActionButton=styled.button(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  background: linear-gradient(145deg, #555, #444);\\n  color: white;\\n  border: none;\\n  padding: 4px 8px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 10px;\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    background: linear-gradient(145deg, #666, #555);\\n  }\\n\"])));const BatchOperations=_ref=>{let{phones,selectedPhones,setSelectedPhones,onBatchStart,onBatchStop,onBatchDelete,onBatchClone}=_ref;const[isProcessing,setIsProcessing]=useState(false);const handleSelectAll=useCallback(checked=>{if(checked){setSelectedPhones(phones.map(p=>p.id));}else{setSelectedPhones([]);}},[phones,setSelectedPhones]);const isAllSelected=phones.length>0&&selectedPhones.length===phones.length;const selectedCount=selectedPhones.length;const hasSelected=selectedCount>0;const handleBatchAction=useCallback(async action=>{if(!hasSelected||isProcessing)return;setIsProcessing(true);try{await action(selectedPhones);}finally{setIsProcessing(false);}},[hasSelected,isProcessing,selectedPhones]);const selectedRunningPhones=phones.filter(p=>{var _p$status;return selectedPhones.includes(p.id)&&((_p$status=p.status)===null||_p$status===void 0?void 0:_p$status.running);}).length;const selectedStoppedPhones=phones.filter(p=>{var _p$status2;return selectedPhones.includes(p.id)&&!((_p$status2=p.status)!==null&&_p$status2!==void 0&&_p$status2.running);}).length;return/*#__PURE__*/_jsxs(BatchContainer,{children:[/*#__PURE__*/_jsxs(BatchSelect,{children:[/*#__PURE__*/_jsx(SelectAllCheckbox,{type:\"checkbox\",checked:isAllSelected,onChange:e=>handleSelectAll(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{children:hasSelected?/*#__PURE__*/_jsxs(_Fragment,{children:[\"Select \",/*#__PURE__*/_jsx(BatchCount,{children:selectedCount}),\" phone\",selectedCount!==1?'s':'']}):'Select phones for batch operations'})]}),hasSelected&&/*#__PURE__*/_jsxs(BatchActions,{children:[selectedStoppedPhones>0&&/*#__PURE__*/_jsxs(BatchButton,{start:true,disabled:isProcessing,onClick:()=>handleBatchAction(onBatchStart),children:[\"\\uD83D\\uDE80 Start \",selectedStoppedPhones]}),selectedRunningPhones>0&&/*#__PURE__*/_jsxs(BatchButton,{stop:true,disabled:isProcessing,onClick:()=>handleBatchAction(onBatchStop),children:[\"\\uD83D\\uDED1 Stop \",selectedRunningPhones]}),/*#__PURE__*/_jsx(BatchButton,{disabled:isProcessing,onClick:()=>handleBatchAction(onBatchClone),children:\"\\uD83D\\uDCCB Clone\"}),/*#__PURE__*/_jsxs(BatchButton,{delete:true,disabled:isProcessing||selectedRunningPhones>0,onClick:()=>handleBatchAction(onBatchDelete),children:[\"\\uD83D\\uDDD1\\uFE0F Delete \",selectedCount]})]}),/*#__PURE__*/_jsxs(QuickActions,{children:[/*#__PURE__*/_jsx(QuickActionButton,{onClick:()=>handleSelectAll(false),children:\"Clear\"}),/*#__PURE__*/_jsx(QuickActionButton,{onClick:()=>{const stoppedPhones=phones.filter(p=>{var _p$status3;return!((_p$status3=p.status)!==null&&_p$status3!==void 0&&_p$status3.running);}).map(p=>p.id);setSelectedPhones(stoppedPhones);},children:\"Stopped\"}),/*#__PURE__*/_jsx(QuickActionButton,{onClick:()=>{const runningPhones=phones.filter(p=>{var _p$status4;return(_p$status4=p.status)===null||_p$status4===void 0?void 0:_p$status4.running;}).map(p=>p.id);setSelectedPhones(runningPhones);},children:\"Running\"})]})]});};export default BatchOperations;","map":{"version":3,"names":["React","useState","useCallback","styled","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","BatchContainer","div","_templateObject","_taggedTemplateLiteral","BatchSelect","_templateObject2","SelectAllCheckbox","input","_templateObject3","BatchActions","_templateObject4","BatchButton","button","_templateObject5","props","start","stop","delete","BatchCount","span","_templateObject6","QuickActions","_templateObject7","QuickActionButton","_templateObject8","BatchOperations","_ref","phones","selectedPhones","setSelectedPhones","onBatchStart","onBatchStop","onBatchDelete","onBatchClone","isProcessing","setIsProcessing","handleSelectAll","checked","map","p","id","isAllSelected","length","selectedCount","hasSelected","handleBatchAction","action","selectedRunningPhones","filter","_p$status","includes","status","running","selectedStoppedPhones","_p$status2","children","type","onChange","e","target","disabled","onClick","stoppedPhones","_p$status3","runningPhones","_p$status4"],"sources":["/workspace/openhands-mentat-cli_OpenPhone/frontend/src/components/BatchOperations.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\n\nconst BatchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 10px 15px;\n  background: linear-gradient(145deg, #2a2a2a, #1a1a1a);\n  border-radius: 8px;\n  border: 1px solid #444;\n  margin: 10px 0;\n`;\n\nconst BatchSelect = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: #ccc;\n  font-size: 12px;\n`;\n\nconst SelectAllCheckbox = styled.input`\n  width: 16px;\n  height: 16px;\n  accent-color: #4CAF50;\n  cursor: pointer;\n`;\n\nconst BatchActions = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: auto;\n`;\n\nconst BatchButton = styled.button`\n  background: ${props => \n    props.start ? 'linear-gradient(145deg, #4CAF50, #45a049)' :\n    props.stop ? 'linear-gradient(145deg, #f44336, #da190b)' :\n    props.delete ? 'linear-gradient(145deg, #FF9800, #F57C00)' :\n    'linear-gradient(145deg, #2196F3, #1976D2)'\n  };\n  color: white;\n  border: none;\n  padding: 6px 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 11px;\n  font-weight: bold;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 2px 8px rgba(0,0,0,0.3);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst BatchCount = styled.span`\n  color: #4CAF50;\n  font-weight: bold;\n`;\n\nconst QuickActions = styled.div`\n  display: flex;\n  gap: 6px;\n  margin-left: 10px;\n`;\n\nconst QuickActionButton = styled.button`\n  background: linear-gradient(145deg, #555, #444);\n  color: white;\n  border: none;\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 10px;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: linear-gradient(145deg, #666, #555);\n  }\n`;\n\nconst BatchOperations = ({ \n  phones, \n  selectedPhones, \n  setSelectedPhones, \n  onBatchStart, \n  onBatchStop, \n  onBatchDelete,\n  onBatchClone\n}) => {\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const handleSelectAll = useCallback((checked) => {\n    if (checked) {\n      setSelectedPhones(phones.map(p => p.id));\n    } else {\n      setSelectedPhones([]);\n    }\n  }, [phones, setSelectedPhones]);\n\n  const isAllSelected = phones.length > 0 && selectedPhones.length === phones.length;\n  const selectedCount = selectedPhones.length;\n  const hasSelected = selectedCount > 0;\n\n  const handleBatchAction = useCallback(async (action) => {\n    if (!hasSelected || isProcessing) return;\n    \n    setIsProcessing(true);\n    try {\n      await action(selectedPhones);\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [hasSelected, isProcessing, selectedPhones]);\n\n  const selectedRunningPhones = phones.filter(p => \n    selectedPhones.includes(p.id) && p.status?.running\n  ).length;\n\n  const selectedStoppedPhones = phones.filter(p => \n    selectedPhones.includes(p.id) && !p.status?.running\n  ).length;\n\n  return (\n    <BatchContainer>\n      <BatchSelect>\n        <SelectAllCheckbox\n          type=\"checkbox\"\n          checked={isAllSelected}\n          onChange={(e) => handleSelectAll(e.target.checked)}\n        />\n        <span>\n          {hasSelected ? (\n            <>Select <BatchCount>{selectedCount}</BatchCount> phone{selectedCount !== 1 ? 's' : ''}</>\n          ) : (\n            'Select phones for batch operations'\n          )}\n        </span>\n      </BatchSelect>\n\n      {hasSelected && (\n        <BatchActions>\n          {selectedStoppedPhones > 0 && (\n            <BatchButton\n              start\n              disabled={isProcessing}\n              onClick={() => handleBatchAction(onBatchStart)}\n            >\n              🚀 Start {selectedStoppedPhones}\n            </BatchButton>\n          )}\n          \n          {selectedRunningPhones > 0 && (\n            <BatchButton\n              stop\n              disabled={isProcessing}\n              onClick={() => handleBatchAction(onBatchStop)}\n            >\n              🛑 Stop {selectedRunningPhones}\n            </BatchButton>\n          )}\n          \n          <BatchButton\n            disabled={isProcessing}\n            onClick={() => handleBatchAction(onBatchClone)}\n          >\n            📋 Clone\n          </BatchButton>\n          \n          <BatchButton\n            delete\n            disabled={isProcessing || selectedRunningPhones > 0}\n            onClick={() => handleBatchAction(onBatchDelete)}\n          >\n            🗑️ Delete {selectedCount}\n          </BatchButton>\n        </BatchActions>\n      )}\n\n      <QuickActions>\n        <QuickActionButton onClick={() => handleSelectAll(false)}>\n          Clear\n        </QuickActionButton>\n        <QuickActionButton onClick={() => {\n          const stoppedPhones = phones.filter(p => !p.status?.running).map(p => p.id);\n          setSelectedPhones(stoppedPhones);\n        }}>\n          Stopped\n        </QuickActionButton>\n        <QuickActionButton onClick={() => {\n          const runningPhones = phones.filter(p => p.status?.running).map(p => p.id);\n          setSelectedPhones(runningPhones);\n        }}>\n          Running\n        </QuickActionButton>\n      </QuickActions>\n    </BatchContainer>\n  );\n};\n\nexport default BatchOperations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}