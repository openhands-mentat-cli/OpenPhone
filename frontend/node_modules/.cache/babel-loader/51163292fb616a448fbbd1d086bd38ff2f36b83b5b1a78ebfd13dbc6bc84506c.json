{"ast":null,"code":"import _objectSpread from\"/workspace/openhands-mentat-cli_OpenPhone/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"/workspace/openhands-mentat-cli_OpenPhone/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17,_templateObject18,_templateObject19;import React,{useState,useEffect,useCallback,useMemo}from'react';import styled from'styled-components';import axios from'axios';import io from'socket.io-client';import PhoneScreen from'./components/PhoneScreen';import ControlPanel from'./components/ControlPanel';import PhoneTemplates from'./components/PhoneTemplates';import ToastNotifications,{useToast}from'./components/ToastNotifications';import BatchOperations from'./components/BatchOperations';import SystemMonitor from'./components/SystemMonitor';// Performance-optimized styled components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AppContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  height: 100vh;\\n  background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);\\n  color: white;\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\n  overflow: hidden;\\n  \\n  @media (max-width: 1200px) {\\n    flex-direction: column;\\n  }\\n  \\n  @media (max-width: 768px) {\\n    height: auto;\\n    min-height: 100vh;\\n  }\\n\"])));const Header=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  height: 60px;\\n  background: rgba(45, 45, 45, 0.95);\\n  backdrop-filter: blur(10px);\\n  border-bottom: 1px solid #444;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 0 20px;\\n  z-index: 1000;\\n  \\n  @media (max-width: 768px) {\\n    position: relative;\\n    height: 50px;\\n    padding: 0 15px;\\n  }\\n\"])));const Logo=styled.h1(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin: 0;\\n  color: #4CAF50;\\n  font-size: 24px;\\n  font-weight: bold;\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  \\n  @media (max-width: 768px) {\\n    font-size: 18px;\\n  }\\n\"])));const PhoneManagerContainer=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 15px;\\n  \\n  @media (max-width: 768px) {\\n    gap: 10px;\\n  }\\n\"])));const PhoneTab=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  color: white;\\n  border: none;\\n  padding: 8px 16px;\\n  border-radius: 20px;\\n  cursor: pointer;\\n  font-size: 12px;\\n  font-weight: bold;\\n  transition: all 0.2s ease;\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n  \\n  &:hover {\\n    transform: translateY(-1px);\\n    box-shadow: 0 4px 12px rgba(0,0,0,0.3);\\n  }\\n  \\n  &:active {\\n    transform: translateY(0);\\n  }\\n  \\n  @media (max-width: 768px) {\\n    padding: 6px 12px;\\n    font-size: 11px;\\n  }\\n\"])),props=>props.active?'linear-gradient(145deg, #4CAF50, #45a049)':'linear-gradient(145deg, #555, #444)');const AddPhoneButton=styled.button(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  background: linear-gradient(145deg, #2196F3, #1976D2);\\n  color: white;\\n  border: none;\\n  padding: 8px 16px;\\n  border-radius: 20px;\\n  cursor: pointer;\\n  font-size: 12px;\\n  font-weight: bold;\\n  transition: all 0.2s ease;\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n  \\n  &:hover {\\n    transform: translateY(-1px);\\n    box-shadow: 0 4px 12px rgba(0,0,0,0.3);\\n  }\\n  \\n  &:active {\\n    transform: translateY(0);\\n  }\\n\"])));const MainContent=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex: 1;\\n  margin-top: 60px;\\n  \\n  @media (max-width: 1200px) {\\n    flex-direction: column;\\n    margin-top: 0;\\n  }\\n  \\n  @media (max-width: 768px) {\\n    margin-top: 0;\\n  }\\n\"])));const PhoneScreenContainer=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 20px;\\n  background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);\\n  \\n  @media (max-width: 1200px) {\\n    padding: 15px;\\n  }\\n  \\n  @media (max-width: 768px) {\\n    padding: 10px;\\n    min-height: 400px;\\n  }\\n\"])));const StatusIndicator=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  padding: 6px 12px;\\n  background: \",\";\\n  border-radius: 15px;\\n  border: 1px solid \",\";\\n  font-size: 12px;\\n  \\n  @media (max-width: 768px) {\\n    padding: 4px 8px;\\n    font-size: 11px;\\n  }\\n\"])),props=>props.running?'rgba(76, 175, 80, 0.2)':'rgba(244, 67, 54, 0.2)',props=>props.running?'#4CAF50':'#f44336');const StatusDot=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background: \",\";\\n  animation: \",\";\\n  \\n  @keyframes pulse {\\n    0% { opacity: 1; }\\n    50% { opacity: 0.5; }\\n    100% { opacity: 1; }\\n  }\\n\"])),props=>props.running?'#4CAF50':'#f44336',props=>props.running?'pulse 2s infinite':'none');const LoadingOverlay=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: rgba(0, 0, 0, 0.8);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 2000;\\n  backdrop-filter: blur(5px);\\n\"])));const LoadingSpinner=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  width: 50px;\\n  height: 50px;\\n  border: 4px solid #333;\\n  border-top: 4px solid #4CAF50;\\n  border-radius: 50%;\\n  animation: spin 1s linear infinite;\\n  \\n  @keyframes spin {\\n    0% { transform: rotate(0deg); }\\n    100% { transform: rotate(360deg); }\\n  }\\n\"])));// Phone Creation Modal Styles\nconst CreatePhoneModal=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background: rgba(0,0,0,0.8);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 2000;\\n  backdrop-filter: blur(5px);\\n\"])));const ModalContent=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  background: linear-gradient(145deg, #2d2d2d, #1a1a1a);\\n  border-radius: 15px;\\n  padding: 30px;\\n  width: 90%;\\n  max-width: 500px;\\n  border: 1px solid #444;\\n  box-shadow: 0 10px 30px rgba(0,0,0,0.5);\\n  max-height: 90vh;\\n  overflow-y: auto;\\n\"])));const ModalTitle=styled.h3(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  margin: 0 0 20px 0;\\n  color: #4CAF50;\\n  font-size: 20px;\\n  text-align: center;\\n\"])));const FormGroup=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));const Label=styled.label(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  display: block;\\n  margin-bottom: 8px;\\n  color: #ccc;\\n  font-size: 14px;\\n  font-weight: bold;\\n\"])));const Input=styled.input(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  background: linear-gradient(145deg, #1a1a1a, #222);\\n  border: 2px solid #444;\\n  border-radius: 8px;\\n  color: white;\\n  padding: 12px;\\n  font-size: 14px;\\n  transition: all 0.3s ease;\\n  box-sizing: border-box;\\n  \\n  &:focus {\\n    outline: none;\\n    border-color: #4CAF50;\\n    box-shadow: 0 0 10px rgba(76, 175, 80, 0.3);\\n  }\\n  \\n  &::placeholder {\\n    color: #888;\\n  }\\n\"])));const Select=styled.select(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  background: linear-gradient(145deg, #1a1a1a, #222);\\n  border: 2px solid #444;\\n  border-radius: 8px;\\n  color: white;\\n  padding: 12px;\\n  font-size: 14px;\\n  transition: all 0.3s ease;\\n  box-sizing: border-box;\\n  \\n  &:focus {\\n    outline: none;\\n    border-color: #4CAF50;\\n    box-shadow: 0 0 10px rgba(76, 175, 80, 0.3);\\n  }\\n  \\n  option {\\n    background: #2d2d2d;\\n    color: white;\\n  }\\n\"])));const ModalButtons=styled.div(_templateObject18||(_templateObject18=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 15px;\\n  margin-top: 25px;\\n\"])));const ModalButton=styled.button(_templateObject19||(_templateObject19=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  background: \",\";\\n  color: white;\\n  border: none;\\n  padding: 12px 20px;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  font-weight: bold;\\n  transition: all 0.3s ease;\\n  \\n  &:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 4px 12px rgba(0,0,0,0.3);\\n  }\\n  \\n  &:active {\\n    transform: translateY(0);\\n  }\\n\"])),props=>props.primary?'linear-gradient(145deg, #4CAF50, #45a049)':'linear-gradient(145deg, #666, #555)');const CloudAndroidPhone=()=>{var _activePhone$status,_activePhone$status2,_activePhone$status3;// State management with performance optimization\nconst[phones,setPhones]=useState([]);const[activePhoneId,setActivePhoneId]=useState(null);const[socket,setSocket]=useState(null);const[logs,setLogs]=useState([]);const[globalLoading,setGlobalLoading]=useState(false);const[showCreateModal,setShowCreateModal]=useState(false);const[selectedPhones,setSelectedPhones]=useState([]);const[showSystemMonitor,setShowSystemMonitor]=useState(false);const[newPhoneConfig,setNewPhoneConfig]=useState({name:'',androidVersion:'android-34',ram:'4096',storage:'8192',resolution:'1080x1920',density:'420'});// Toast notifications\nconst toast=useToast();// Memoized active phone\nconst activePhone=useMemo(()=>phones.find(phone=>phone.id===activePhoneId)||phones[0]||{id:null,name:'No Phone',status:{running:false}},[phones,activePhoneId]);// Optimized log management\nconst addLog=useCallback(function(message){let phoneId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;const timestamp=new Date().toLocaleTimeString();const logEntry=\"[\".concat(timestamp,\"] \").concat(phoneId?\"[\".concat(phoneId,\"] \"):'').concat(message);setLogs(prev=>{const newLogs=[...prev,logEntry];return newLogs.slice(-100);// Keep only last 100 logs for performance\n});},[]);// Socket connection with cleanup\nuseEffect(()=>{const newSocket=io({transports:['websocket'],upgrade:false,rememberUpgrade:false});setSocket(newSocket);// Socket event listeners\nnewSocket.on('status-update',data=>{setPhones(prev=>prev.map(phone=>phone.id===activePhoneId?_objectSpread(_objectSpread({},phone),{},{status:data}):phone));});newSocket.on('text-sent',data=>{if(data.success){addLog('✅ Text sent successfully',activePhoneId);}else{addLog('❌ Failed to send text: '+data.error,activePhoneId);}});newSocket.on('tap-sent',data=>{if(data.success){addLog('✅ Tap sent successfully',activePhoneId);}else{addLog('❌ Failed to send tap: '+data.error,activePhoneId);}});// Cleanup\nreturn()=>{newSocket.close();};},[activePhoneId,addLog]);// Fetch all phones from API\nconst fetchPhones=useCallback(async()=>{try{const response=await axios.get('/api/phones');setPhones(response.data);// Set active phone to first phone if none selected\nif(!activePhoneId&&response.data.length>0){setActivePhoneId(response.data[0].id);}}catch(error){console.error('Failed to fetch phones:',error);addLog('❌ Failed to fetch phones');}},[activePhoneId,addLog]);// Fetch status with error handling\nconst fetchStatus=useCallback(async function(){let phoneId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:activePhoneId;try{if(!phoneId)return;const response=await axios.get(\"/api/status?phoneId=\".concat(phoneId));setPhones(prev=>prev.map(p=>p.id===phoneId?_objectSpread(_objectSpread({},p),{},{status:response.data}):p));}catch(error){console.error('Failed to fetch status:',error);addLog('❌ Failed to fetch status',phoneId);}},[activePhoneId,addLog]);// Phone management functions\nconst startCloudPhone=useCallback(async function(){let phoneId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:activePhoneId;setGlobalLoading(true);addLog('🚀 Starting Cloud Android Phone...',phoneId);toast.info('Starting Phone','Initializing Android emulator...');try{const response=await axios.post('/api/start',{phoneId});if(response.data.success){addLog('✅ Cloud Android Phone started successfully',phoneId);toast.success('Phone Started','Android emulator is now running!');await fetchStatus(phoneId);}}catch(error){var _error$response,_error$response$data;const errorMsg=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||error.message;addLog('❌ Failed to start: '+errorMsg,phoneId);toast.error('Start Failed',\"Could not start phone: \".concat(errorMsg));}finally{setGlobalLoading(false);}},[activePhoneId,addLog,fetchStatus,toast]);const stopCloudPhone=useCallback(async function(){let phoneId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:activePhoneId;setGlobalLoading(true);addLog('🛑 Stopping Cloud Android Phone...',phoneId);toast.info('Stopping Phone','Shutting down Android emulator...');try{const response=await axios.post('/api/stop',{phoneId});if(response.data.success){addLog('✅ Cloud Android Phone stopped',phoneId);toast.success('Phone Stopped','Android emulator has been stopped');await fetchStatus(phoneId);}}catch(error){var _error$response2,_error$response2$data;const errorMsg=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||error.message;addLog('❌ Failed to stop: '+errorMsg,phoneId);toast.error('Stop Failed',\"Could not stop phone: \".concat(errorMsg));}finally{setGlobalLoading(false);}},[activePhoneId,addLog,fetchStatus,toast]);// Create new phone\nconst createPhone=useCallback(async config=>{setGlobalLoading(true);addLog('📱 Creating new phone...',config.name);toast.info('Creating Phone',\"Setting up \".concat(config.name,\"...\"));try{const response=await axios.post('/api/phones',config);if(response.data.success){addLog('✅ Phone created successfully',response.data.phone.id);toast.success('Phone Created',\"\".concat(config.name,\" is ready to use!\"));await fetchPhones();setActivePhoneId(response.data.phone.id);}}catch(error){var _error$response3,_error$response3$data;const errorMsg=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||error.message;addLog('❌ Failed to create phone: '+errorMsg);toast.error('Creation Failed',\"Could not create phone: \".concat(errorMsg));}finally{setGlobalLoading(false);}},[addLog,fetchPhones,toast]);// Delete phone\nconst deletePhone=useCallback(async phoneId=>{setGlobalLoading(true);addLog('🗑️ Deleting phone...',phoneId);try{const response=await axios.delete(\"/api/phones/\".concat(phoneId));if(response.data.success){addLog('✅ Phone deleted successfully',phoneId);await fetchPhones();// Switch to another phone if current active phone was deleted\nif(activePhoneId===phoneId){const remainingPhones=phones.filter(p=>p.id!==phoneId);setActivePhoneId(remainingPhones.length>0?remainingPhones[0].id:null);}}}catch(error){var _error$response4,_error$response4$data;addLog('❌ Failed to delete phone: '+(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||error.message),phoneId);}finally{setGlobalLoading(false);}},[activePhoneId,phones,addLog,fetchPhones]);// Optimized text sending\nconst sendText=useCallback(async text=>{if(!text.trim()){addLog('❌ Please enter some text',activePhoneId);return;}addLog(\"\\uD83D\\uDCDD Sending text: \\\"\".concat(text.substring(0,50)).concat(text.length>50?'...':'',\"\\\"\"),activePhoneId);try{const response=await axios.post('/api/send-text',{text,phoneId:activePhoneId});if(response.data.success){addLog('✅ Text sent to Android phone',activePhoneId);}}catch(error){var _error$response5,_error$response5$data;addLog('❌ Failed to send text: '+(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||error.message),activePhoneId);}},[activePhoneId,addLog]);// Optimized tap handling\nconst sendTap=useCallback(async(x,y)=>{addLog(\"\\uD83D\\uDC46 Sending tap: \".concat(x,\", \").concat(y),activePhoneId);try{const response=await axios.post('/api/tap',{x,y,phoneId:activePhoneId});if(response.data.success){addLog('✅ Tap sent to Android phone',activePhoneId);}}catch(error){var _error$response6,_error$response6$data;addLog('❌ Failed to send tap: '+(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.error)||error.message),activePhoneId);}},[activePhoneId,addLog]);// Hardware key events\nconst sendKeyEvent=useCallback(async keycode=>{addLog(\"\\u2328\\uFE0F Sending key: \".concat(keycode),activePhoneId);try{const response=await axios.post('/api/key',{keycode,phoneId:activePhoneId});if(response.data.success){addLog('✅ Key event sent',activePhoneId);}}catch(error){var _error$response7,_error$response7$data;addLog('❌ Failed to send key: '+(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.error)||error.message),activePhoneId);}},[activePhoneId,addLog]);// File upload with progress\nconst handleFileUpload=useCallback(async file=>{if(!file)return;const formData=new FormData();formData.append('file',file);formData.append('phoneId',activePhoneId);addLog(\"\\uD83D\\uDCC1 Uploading file: \".concat(file.name),activePhoneId);try{const response=await axios.post('/api/upload',formData,{headers:{'Content-Type':'multipart/form-data'},onUploadProgress:progressEvent=>{const percentCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);if(percentCompleted%25===0){// Log every 25%\naddLog(\"\\uD83D\\uDCC1 Upload progress: \".concat(percentCompleted,\"%\"),activePhoneId);}}});if(response.data.success){addLog(\"\\u2705 File uploaded: \".concat(response.data.path),activePhoneId);}}catch(error){var _error$response8,_error$response8$data;addLog('❌ Failed to upload file: '+(((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.error)||error.message),activePhoneId);}},[activePhoneId,addLog]);// Handle template selection\nconst handleTemplateSelect=useCallback(templateConfig=>{setNewPhoneConfig(prev=>_objectSpread(_objectSpread({},prev),templateConfig));addLog(\"\\uD83D\\uDCF1 Applied template configuration\");},[addLog]);// Handle create phone form submission\nconst handleCreatePhone=useCallback(()=>{if(!newPhoneConfig.name.trim()){addLog('❌ Please enter a phone name');return;}createPhone(newPhoneConfig);setShowCreateModal(false);setNewPhoneConfig({name:'',androidVersion:'android-34',ram:'4096',storage:'8192',resolution:'1080x1920',density:'420'});},[newPhoneConfig,createPhone,addLog]);// Add new phone - opens creation modal\nconst addNewPhone=useCallback(()=>{setShowCreateModal(true);addLog('📱 Opening phone creation dialog...');},[addLog]);// Batch operations\nconst handleBatchStart=useCallback(async phoneIds=>{toast.info('Batch Start',\"Starting \".concat(phoneIds.length,\" phones...\"));let successCount=0;let errorCount=0;for(const phoneId of phoneIds){try{await startCloudPhone(phoneId);successCount++;}catch(error){errorCount++;}}if(errorCount===0){toast.success('Batch Complete',\"Successfully started \".concat(successCount,\" phones\"));}else{toast.warning('Batch Partial',\"Started \".concat(successCount,\", failed \").concat(errorCount));}},[startCloudPhone,toast]);const handleBatchStop=useCallback(async phoneIds=>{toast.info('Batch Stop',\"Stopping \".concat(phoneIds.length,\" phones...\"));let successCount=0;let errorCount=0;for(const phoneId of phoneIds){try{await stopCloudPhone(phoneId);successCount++;}catch(error){errorCount++;}}if(errorCount===0){toast.success('Batch Complete',\"Successfully stopped \".concat(successCount,\" phones\"));}else{toast.warning('Batch Partial',\"Stopped \".concat(successCount,\", failed \").concat(errorCount));}},[stopCloudPhone,toast]);const handleBatchDelete=useCallback(async phoneIds=>{toast.info('Batch Delete',\"Deleting \".concat(phoneIds.length,\" phones...\"));let successCount=0;let errorCount=0;for(const phoneId of phoneIds){try{await deletePhone(phoneId);successCount++;}catch(error){errorCount++;}}setSelectedPhones([]);// Clear selection after batch delete\nif(errorCount===0){toast.success('Batch Complete',\"Successfully deleted \".concat(successCount,\" phones\"));}else{toast.warning('Batch Partial',\"Deleted \".concat(successCount,\", failed \").concat(errorCount));}},[deletePhone,toast]);const handleBatchClone=useCallback(async phoneIds=>{toast.info('Batch Clone',\"Cloning \".concat(phoneIds.length,\" phones...\"));let successCount=0;let errorCount=0;for(const phoneId of phoneIds){try{const originalPhone=phones.find(p=>p.id===phoneId);if(originalPhone){var _originalPhone$status,_originalPhone$status2,_originalPhone$status3,_originalPhone$status4,_originalPhone$status5,_originalPhone$status6,_originalPhone$status7;const cloneConfig={name:\"\".concat(originalPhone.name,\" (Clone)\"),androidVersion:((_originalPhone$status=originalPhone.status)===null||_originalPhone$status===void 0?void 0:_originalPhone$status.androidVersion)||'android-34',ram:((_originalPhone$status2=originalPhone.status)===null||_originalPhone$status2===void 0?void 0:_originalPhone$status2.ramSize)||'4096',storage:((_originalPhone$status3=originalPhone.status)===null||_originalPhone$status3===void 0?void 0:_originalPhone$status3.storageSize)||'8192',resolution:\"\".concat((_originalPhone$status4=originalPhone.status)===null||_originalPhone$status4===void 0?void 0:_originalPhone$status4.screenWidth,\"x\").concat((_originalPhone$status5=originalPhone.status)===null||_originalPhone$status5===void 0?void 0:_originalPhone$status5.screenHeight)||'1080x1920',density:((_originalPhone$status6=originalPhone.status)===null||_originalPhone$status6===void 0?void 0:(_originalPhone$status7=_originalPhone$status6.density)===null||_originalPhone$status7===void 0?void 0:_originalPhone$status7.toString())||'420'};await createPhone(cloneConfig);successCount++;}}catch(error){errorCount++;}}if(errorCount===0){toast.success('Batch Complete',\"Successfully cloned \".concat(successCount,\" phones\"));}else{toast.warning('Batch Partial',\"Cloned \".concat(successCount,\", failed \").concat(errorCount));}},[phones,createPhone,toast]);// Remove phone\nconst removePhone=useCallback(phoneId=>{deletePhone(phoneId);},[deletePhone]);// Initial phones fetch\nuseEffect(()=>{fetchPhones();},[]);// Auto-refresh status every 30 seconds\nuseEffect(()=>{const interval=setInterval(()=>{phones.forEach(phone=>{var _phone$status;if((_phone$status=phone.status)!==null&&_phone$status!==void 0&&_phone$status.running){fetchStatus(phone.id);}});},30000);return()=>clearInterval(interval);},[phones,fetchStatus]);return/*#__PURE__*/_jsxs(AppContainer,{children:[globalLoading&&/*#__PURE__*/_jsx(LoadingOverlay,{children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',color:'white'},children:[/*#__PURE__*/_jsx(LoadingSpinner,{}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'20px',fontSize:'18px'},children:\"Processing...\"})]})}),/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsx(Logo,{children:\"\\uD83D\\uDCF1 Cloud Android Phone\"}),/*#__PURE__*/_jsxs(PhoneManagerContainer,{children:[phones.map(phone=>{var _phone$status2;return/*#__PURE__*/_jsxs(PhoneTab,{active:phone.id===activePhoneId,onClick:()=>setActivePhoneId(phone.id),children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedPhones.includes(phone.id),onChange:e=>{e.stopPropagation();if(e.target.checked){setSelectedPhones(prev=>[...prev,phone.id]);}else{setSelectedPhones(prev=>prev.filter(id=>id!==phone.id));}},style:{marginRight:'8px',accentColor:'#4CAF50',cursor:'pointer'}}),/*#__PURE__*/_jsx(StatusDot,{running:(_phone$status2=phone.status)===null||_phone$status2===void 0?void 0:_phone$status2.running}),phone.name,phones.length>1&&/*#__PURE__*/_jsx(\"span\",{onClick:e=>{e.stopPropagation();removePhone(phone.id);},style:{marginLeft:'5px',cursor:'pointer'},children:\"\\xD7\"})]},phone.id);}),/*#__PURE__*/_jsx(AddPhoneButton,{onClick:addNewPhone,children:\"\\u2795 Add Phone\"}),/*#__PURE__*/_jsx(AddPhoneButton,{onClick:()=>setShowSystemMonitor(!showSystemMonitor),children:\"\\uD83D\\uDCCA Monitor\"}),/*#__PURE__*/_jsxs(StatusIndicator,{running:(_activePhone$status=activePhone.status)===null||_activePhone$status===void 0?void 0:_activePhone$status.running,children:[/*#__PURE__*/_jsx(StatusDot,{running:(_activePhone$status2=activePhone.status)===null||_activePhone$status2===void 0?void 0:_activePhone$status2.running}),(_activePhone$status3=activePhone.status)!==null&&_activePhone$status3!==void 0&&_activePhone$status3.running?'Online':'Offline']})]}),phones.length>0&&/*#__PURE__*/_jsx(BatchOperations,{phones:phones,selectedPhones:selectedPhones,setSelectedPhones:setSelectedPhones,onBatchStart:handleBatchStart,onBatchStop:handleBatchStop,onBatchDelete:handleBatchDelete,onBatchClone:handleBatchClone})]}),/*#__PURE__*/_jsxs(MainContent,{children:[/*#__PURE__*/_jsx(ControlPanel,{status:activePhone.status,onSendText:sendText,onTap:sendTap,onKeyEvent:sendKeyEvent,onFileUpload:handleFileUpload,onStartPhone:()=>startCloudPhone(activePhoneId),onStopPhone:()=>stopCloudPhone(activePhoneId),logs:logs}),/*#__PURE__*/_jsx(PhoneScreenContainer,{children:showSystemMonitor?/*#__PURE__*/_jsx(SystemMonitor,{phones:phones}):/*#__PURE__*/_jsx(PhoneScreen,{status:activePhone.status,onTap:sendTap,onHomePress:()=>sendKeyEvent(3)})})]}),/*#__PURE__*/_jsx(ToastNotifications,{toasts:toast.toasts,removeToast:toast.removeToast}),showCreateModal&&/*#__PURE__*/_jsx(CreatePhoneModal,{onClick:()=>setShowCreateModal(false),children:/*#__PURE__*/_jsxs(ModalContent,{onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(ModalTitle,{children:\"\\uD83D\\uDCF1 Create New Android Phone\"}),/*#__PURE__*/_jsx(PhoneTemplates,{onSelectTemplate:handleTemplateSelect}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Phone Name\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",placeholder:\"Enter phone name (e.g., My Phone 2)\",value:newPhoneConfig.name,onChange:e=>setNewPhoneConfig(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Android Version\"}),/*#__PURE__*/_jsxs(Select,{value:newPhoneConfig.androidVersion,onChange:e=>setNewPhoneConfig(prev=>_objectSpread(_objectSpread({},prev),{},{androidVersion:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"android-34\",children:\"Android 14 (Latest)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"android-33\",children:\"Android 13\"}),/*#__PURE__*/_jsx(\"option\",{value:\"android-32\",children:\"Android 12\"}),/*#__PURE__*/_jsx(\"option\",{value:\"android-31\",children:\"Android 11\"})]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"RAM (MB)\"}),/*#__PURE__*/_jsxs(Select,{value:newPhoneConfig.ram,onChange:e=>setNewPhoneConfig(prev=>_objectSpread(_objectSpread({},prev),{},{ram:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"2048\",children:\"2GB RAM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"4096\",children:\"4GB RAM (Recommended)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"6144\",children:\"6GB RAM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"8192\",children:\"8GB RAM (High Performance)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"16384\",children:\"16GB RAM (Ultra Performance)\"})]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Storage (MB)\"}),/*#__PURE__*/_jsxs(Select,{value:newPhoneConfig.storage,onChange:e=>setNewPhoneConfig(prev=>_objectSpread(_objectSpread({},prev),{},{storage:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"4096\",children:\"4GB Storage\"}),/*#__PURE__*/_jsx(\"option\",{value:\"8192\",children:\"8GB Storage (Recommended)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"16384\",children:\"16GB Storage\"}),/*#__PURE__*/_jsx(\"option\",{value:\"32768\",children:\"32GB Storage\"}),/*#__PURE__*/_jsx(\"option\",{value:\"65536\",children:\"64GB Storage\"})]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Screen Resolution\"}),/*#__PURE__*/_jsxs(Select,{value:newPhoneConfig.resolution,onChange:e=>setNewPhoneConfig(prev=>_objectSpread(_objectSpread({},prev),{},{resolution:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"720x1280\",children:\"720x1280 (HD)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1080x1920\",children:\"1080x1920 (Full HD)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1440x2560\",children:\"1440x2560 (2K)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1440x3120\",children:\"1440x3120 (2K+)\"})]})]}),/*#__PURE__*/_jsxs(ModalButtons,{children:[/*#__PURE__*/_jsx(ModalButton,{onClick:()=>setShowCreateModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(ModalButton,{primary:true,onClick:handleCreatePhone,children:\"Create Phone\"})]})]})})]});};export default CloudAndroidPhone;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","styled","axios","io","PhoneScreen","ControlPanel","PhoneTemplates","ToastNotifications","useToast","BatchOperations","SystemMonitor","jsx","_jsx","jsxs","_jsxs","AppContainer","div","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","Logo","h1","_templateObject3","PhoneManagerContainer","_templateObject4","PhoneTab","button","_templateObject5","props","active","AddPhoneButton","_templateObject6","MainContent","_templateObject7","PhoneScreenContainer","_templateObject8","StatusIndicator","_templateObject9","running","StatusDot","_templateObject0","LoadingOverlay","_templateObject1","LoadingSpinner","_templateObject10","CreatePhoneModal","_templateObject11","ModalContent","_templateObject12","ModalTitle","h3","_templateObject13","FormGroup","_templateObject14","Label","label","_templateObject15","Input","input","_templateObject16","Select","select","_templateObject17","ModalButtons","_templateObject18","ModalButton","_templateObject19","primary","CloudAndroidPhone","_activePhone$status","_activePhone$status2","_activePhone$status3","phones","setPhones","activePhoneId","setActivePhoneId","socket","setSocket","logs","setLogs","globalLoading","setGlobalLoading","showCreateModal","setShowCreateModal","selectedPhones","setSelectedPhones","showSystemMonitor","setShowSystemMonitor","newPhoneConfig","setNewPhoneConfig","name","androidVersion","ram","storage","resolution","density","toast","activePhone","find","phone","id","status","addLog","message","phoneId","arguments","length","undefined","timestamp","Date","toLocaleTimeString","logEntry","concat","prev","newLogs","slice","newSocket","transports","upgrade","rememberUpgrade","on","data","map","_objectSpread","success","error","close","fetchPhones","response","get","console","fetchStatus","p","startCloudPhone","info","post","_error$response","_error$response$data","errorMsg","stopCloudPhone","_error$response2","_error$response2$data","createPhone","config","_error$response3","_error$response3$data","deletePhone","delete","remainingPhones","filter","_error$response4","_error$response4$data","sendText","text","trim","substring","_error$response5","_error$response5$data","sendTap","x","y","_error$response6","_error$response6$data","sendKeyEvent","keycode","_error$response7","_error$response7$data","handleFileUpload","file","formData","FormData","append","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","path","_error$response8","_error$response8$data","handleTemplateSelect","templateConfig","handleCreatePhone","addNewPhone","handleBatchStart","phoneIds","successCount","errorCount","warning","handleBatchStop","handleBatchDelete","handleBatchClone","originalPhone","_originalPhone$status","_originalPhone$status2","_originalPhone$status3","_originalPhone$status4","_originalPhone$status5","_originalPhone$status6","_originalPhone$status7","cloneConfig","ramSize","storageSize","screenWidth","screenHeight","toString","removePhone","interval","setInterval","forEach","_phone$status","clearInterval","children","style","textAlign","color","marginTop","fontSize","_phone$status2","onClick","type","checked","includes","onChange","e","stopPropagation","target","marginRight","accentColor","cursor","marginLeft","onBatchStart","onBatchStop","onBatchDelete","onBatchClone","onSendText","onTap","onKeyEvent","onFileUpload","onStartPhone","onStopPhone","onHomePress","toasts","removeToast","onSelectTemplate","placeholder","value"],"sources":["/workspace/openhands-mentat-cli_OpenPhone/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport PhoneScreen from './components/PhoneScreen';\nimport ControlPanel from './components/ControlPanel';\nimport PhoneTemplates from './components/PhoneTemplates';\nimport ToastNotifications, { useToast } from './components/ToastNotifications';\nimport BatchOperations from './components/BatchOperations';\nimport SystemMonitor from './components/SystemMonitor';\n\n// Performance-optimized styled components\nconst AppContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);\n  color: white;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  overflow: hidden;\n  \n  @media (max-width: 1200px) {\n    flex-direction: column;\n  }\n  \n  @media (max-width: 768px) {\n    height: auto;\n    min-height: 100vh;\n  }\n`;\n\nconst Header = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  background: rgba(45, 45, 45, 0.95);\n  backdrop-filter: blur(10px);\n  border-bottom: 1px solid #444;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 20px;\n  z-index: 1000;\n  \n  @media (max-width: 768px) {\n    position: relative;\n    height: 50px;\n    padding: 0 15px;\n  }\n`;\n\nconst Logo = styled.h1`\n  margin: 0;\n  color: #4CAF50;\n  font-size: 24px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  \n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nconst PhoneManagerContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  \n  @media (max-width: 768px) {\n    gap: 10px;\n  }\n`;\n\nconst PhoneTab = styled.button`\n  background: ${props => props.active ? \n    'linear-gradient(145deg, #4CAF50, #45a049)' : \n    'linear-gradient(145deg, #555, #444)'\n  };\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 20px;\n  cursor: pointer;\n  font-size: 12px;\n  font-weight: bold;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 6px 12px;\n    font-size: 11px;\n  }\n`;\n\nconst AddPhoneButton = styled.button`\n  background: linear-gradient(145deg, #2196F3, #1976D2);\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 20px;\n  cursor: pointer;\n  font-size: 12px;\n  font-weight: bold;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst MainContent = styled.div`\n  display: flex;\n  flex: 1;\n  margin-top: 60px;\n  \n  @media (max-width: 1200px) {\n    flex-direction: column;\n    margin-top: 0;\n  }\n  \n  @media (max-width: 768px) {\n    margin-top: 0;\n  }\n`;\n\nconst PhoneScreenContainer = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);\n  \n  @media (max-width: 1200px) {\n    padding: 15px;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px;\n    min-height: 400px;\n  }\n`;\n\nconst StatusIndicator = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 6px 12px;\n  background: ${props => props.running ? \n    'rgba(76, 175, 80, 0.2)' : \n    'rgba(244, 67, 54, 0.2)'\n  };\n  border-radius: 15px;\n  border: 1px solid ${props => props.running ? '#4CAF50' : '#f44336'};\n  font-size: 12px;\n  \n  @media (max-width: 768px) {\n    padding: 4px 8px;\n    font-size: 11px;\n  }\n`;\n\nconst StatusDot = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: ${props => props.running ? '#4CAF50' : '#f44336'};\n  animation: ${props => props.running ? 'pulse 2s infinite' : 'none'};\n  \n  @keyframes pulse {\n    0% { opacity: 1; }\n    50% { opacity: 0.5; }\n    100% { opacity: 1; }\n  }\n`;\n\nconst LoadingOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n  backdrop-filter: blur(5px);\n`;\n\nconst LoadingSpinner = styled.div`\n  width: 50px;\n  height: 50px;\n  border: 4px solid #333;\n  border-top: 4px solid #4CAF50;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\n// Phone Creation Modal Styles\nconst CreatePhoneModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0,0,0,0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n  backdrop-filter: blur(5px);\n`;\n\nconst ModalContent = styled.div`\n  background: linear-gradient(145deg, #2d2d2d, #1a1a1a);\n  border-radius: 15px;\n  padding: 30px;\n  width: 90%;\n  max-width: 500px;\n  border: 1px solid #444;\n  box-shadow: 0 10px 30px rgba(0,0,0,0.5);\n  max-height: 90vh;\n  overflow-y: auto;\n`;\n\nconst ModalTitle = styled.h3`\n  margin: 0 0 20px 0;\n  color: #4CAF50;\n  font-size: 20px;\n  text-align: center;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  color: #ccc;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  background: linear-gradient(145deg, #1a1a1a, #222);\n  border: 2px solid #444;\n  border-radius: 8px;\n  color: white;\n  padding: 12px;\n  font-size: 14px;\n  transition: all 0.3s ease;\n  box-sizing: border-box;\n  \n  &:focus {\n    outline: none;\n    border-color: #4CAF50;\n    box-shadow: 0 0 10px rgba(76, 175, 80, 0.3);\n  }\n  \n  &::placeholder {\n    color: #888;\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  background: linear-gradient(145deg, #1a1a1a, #222);\n  border: 2px solid #444;\n  border-radius: 8px;\n  color: white;\n  padding: 12px;\n  font-size: 14px;\n  transition: all 0.3s ease;\n  box-sizing: border-box;\n  \n  &:focus {\n    outline: none;\n    border-color: #4CAF50;\n    box-shadow: 0 0 10px rgba(76, 175, 80, 0.3);\n  }\n  \n  option {\n    background: #2d2d2d;\n    color: white;\n  }\n`;\n\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-top: 25px;\n`;\n\nconst ModalButton = styled.button`\n  flex: 1;\n  background: ${props => props.primary ? \n    'linear-gradient(145deg, #4CAF50, #45a049)' : \n    'linear-gradient(145deg, #666, #555)'\n  };\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: bold;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst CloudAndroidPhone = () => {\n  // State management with performance optimization\n  const [phones, setPhones] = useState([]);\n  const [activePhoneId, setActivePhoneId] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [logs, setLogs] = useState([]);\n  const [globalLoading, setGlobalLoading] = useState(false);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [selectedPhones, setSelectedPhones] = useState([]);\n  const [showSystemMonitor, setShowSystemMonitor] = useState(false);\n  const [newPhoneConfig, setNewPhoneConfig] = useState({\n    name: '',\n    androidVersion: 'android-34',\n    ram: '4096',\n    storage: '8192',\n    resolution: '1080x1920',\n    density: '420'\n  });\n  \n  // Toast notifications\n  const toast = useToast();\n\n  // Memoized active phone\n  const activePhone = useMemo(() => \n    phones.find(phone => phone.id === activePhoneId) || phones[0] || { id: null, name: 'No Phone', status: { running: false } },\n    [phones, activePhoneId]\n  );\n\n  // Optimized log management\n  const addLog = useCallback((message, phoneId = null) => {\n    const timestamp = new Date().toLocaleTimeString();\n    const logEntry = `[${timestamp}] ${phoneId ? `[${phoneId}] ` : ''}${message}`;\n    \n    setLogs(prev => {\n      const newLogs = [...prev, logEntry];\n      return newLogs.slice(-100); // Keep only last 100 logs for performance\n    });\n  }, []);\n\n  // Socket connection with cleanup\n  useEffect(() => {\n    const newSocket = io({\n      transports: ['websocket'],\n      upgrade: false,\n      rememberUpgrade: false\n    });\n    \n    setSocket(newSocket);\n\n    // Socket event listeners\n    newSocket.on('status-update', (data) => {\n      setPhones(prev => prev.map(phone => \n        phone.id === activePhoneId ? { ...phone, status: data } : phone\n      ));\n    });\n\n    newSocket.on('text-sent', (data) => {\n      if (data.success) {\n        addLog('✅ Text sent successfully', activePhoneId);\n      } else {\n        addLog('❌ Failed to send text: ' + data.error, activePhoneId);\n      }\n    });\n\n    newSocket.on('tap-sent', (data) => {\n      if (data.success) {\n        addLog('✅ Tap sent successfully', activePhoneId);\n      } else {\n        addLog('❌ Failed to send tap: ' + data.error, activePhoneId);\n      }\n    });\n\n    // Cleanup\n    return () => {\n      newSocket.close();\n    };\n  }, [activePhoneId, addLog]);\n\n  // Fetch all phones from API\n  const fetchPhones = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/phones');\n      setPhones(response.data);\n      \n      // Set active phone to first phone if none selected\n      if (!activePhoneId && response.data.length > 0) {\n        setActivePhoneId(response.data[0].id);\n      }\n    } catch (error) {\n      console.error('Failed to fetch phones:', error);\n      addLog('❌ Failed to fetch phones');\n    }\n  }, [activePhoneId, addLog]);\n\n  // Fetch status with error handling\n  const fetchStatus = useCallback(async (phoneId = activePhoneId) => {\n    try {\n      if (!phoneId) return;\n\n      const response = await axios.get(`/api/status?phoneId=${phoneId}`);\n      setPhones(prev => prev.map(p => \n        p.id === phoneId ? { ...p, status: response.data } : p\n      ));\n    } catch (error) {\n      console.error('Failed to fetch status:', error);\n      addLog('❌ Failed to fetch status', phoneId);\n    }\n  }, [activePhoneId, addLog]);\n\n  // Phone management functions\n  const startCloudPhone = useCallback(async (phoneId = activePhoneId) => {\n    setGlobalLoading(true);\n    addLog('🚀 Starting Cloud Android Phone...', phoneId);\n    toast.info('Starting Phone', 'Initializing Android emulator...');\n    \n    try {\n      const response = await axios.post('/api/start', { phoneId });\n      \n      if (response.data.success) {\n        addLog('✅ Cloud Android Phone started successfully', phoneId);\n        toast.success('Phone Started', 'Android emulator is now running!');\n        await fetchStatus(phoneId);\n      }\n    } catch (error) {\n      const errorMsg = error.response?.data?.error || error.message;\n      addLog('❌ Failed to start: ' + errorMsg, phoneId);\n      toast.error('Start Failed', `Could not start phone: ${errorMsg}`);\n    } finally {\n      setGlobalLoading(false);\n    }\n  }, [activePhoneId, addLog, fetchStatus, toast]);\n\n  const stopCloudPhone = useCallback(async (phoneId = activePhoneId) => {\n    setGlobalLoading(true);\n    addLog('🛑 Stopping Cloud Android Phone...', phoneId);\n    toast.info('Stopping Phone', 'Shutting down Android emulator...');\n    \n    try {\n      const response = await axios.post('/api/stop', { phoneId });\n      if (response.data.success) {\n        addLog('✅ Cloud Android Phone stopped', phoneId);\n        toast.success('Phone Stopped', 'Android emulator has been stopped');\n        await fetchStatus(phoneId);\n      }\n    } catch (error) {\n      const errorMsg = error.response?.data?.error || error.message;\n      addLog('❌ Failed to stop: ' + errorMsg, phoneId);\n      toast.error('Stop Failed', `Could not stop phone: ${errorMsg}`);\n    } finally {\n      setGlobalLoading(false);\n    }\n  }, [activePhoneId, addLog, fetchStatus, toast]);\n\n  // Create new phone\n  const createPhone = useCallback(async (config) => {\n    setGlobalLoading(true);\n    addLog('📱 Creating new phone...', config.name);\n    toast.info('Creating Phone', `Setting up ${config.name}...`);\n    \n    try {\n      const response = await axios.post('/api/phones', config);\n      if (response.data.success) {\n        addLog('✅ Phone created successfully', response.data.phone.id);\n        toast.success('Phone Created', `${config.name} is ready to use!`);\n        await fetchPhones();\n        setActivePhoneId(response.data.phone.id);\n      }\n    } catch (error) {\n      const errorMsg = error.response?.data?.error || error.message;\n      addLog('❌ Failed to create phone: ' + errorMsg);\n      toast.error('Creation Failed', `Could not create phone: ${errorMsg}`);\n    } finally {\n      setGlobalLoading(false);\n    }\n  }, [addLog, fetchPhones, toast]);\n\n  // Delete phone\n  const deletePhone = useCallback(async (phoneId) => {\n    setGlobalLoading(true);\n    addLog('🗑️ Deleting phone...', phoneId);\n    \n    try {\n      const response = await axios.delete(`/api/phones/${phoneId}`);\n      if (response.data.success) {\n        addLog('✅ Phone deleted successfully', phoneId);\n        await fetchPhones();\n        \n        // Switch to another phone if current active phone was deleted\n        if (activePhoneId === phoneId) {\n          const remainingPhones = phones.filter(p => p.id !== phoneId);\n          setActivePhoneId(remainingPhones.length > 0 ? remainingPhones[0].id : null);\n        }\n      }\n    } catch (error) {\n      addLog('❌ Failed to delete phone: ' + (error.response?.data?.error || error.message), phoneId);\n    } finally {\n      setGlobalLoading(false);\n    }\n  }, [activePhoneId, phones, addLog, fetchPhones]);\n\n  // Optimized text sending\n  const sendText = useCallback(async (text) => {\n    if (!text.trim()) {\n      addLog('❌ Please enter some text', activePhoneId);\n      return;\n    }\n\n    addLog(`📝 Sending text: \"${text.substring(0, 50)}${text.length > 50 ? '...' : ''}\"`, activePhoneId);\n    \n    try {\n      const response = await axios.post('/api/send-text', { \n        text,\n        phoneId: activePhoneId \n      });\n      \n      if (response.data.success) {\n        addLog('✅ Text sent to Android phone', activePhoneId);\n      }\n    } catch (error) {\n      addLog('❌ Failed to send text: ' + (error.response?.data?.error || error.message), activePhoneId);\n    }\n  }, [activePhoneId, addLog]);\n\n  // Optimized tap handling\n  const sendTap = useCallback(async (x, y) => {\n    addLog(`👆 Sending tap: ${x}, ${y}`, activePhoneId);\n    \n    try {\n      const response = await axios.post('/api/tap', { \n        x, \n        y, \n        phoneId: activePhoneId \n      });\n      \n      if (response.data.success) {\n        addLog('✅ Tap sent to Android phone', activePhoneId);\n      }\n    } catch (error) {\n      addLog('❌ Failed to send tap: ' + (error.response?.data?.error || error.message), activePhoneId);\n    }\n  }, [activePhoneId, addLog]);\n\n  // Hardware key events\n  const sendKeyEvent = useCallback(async (keycode) => {\n    addLog(`⌨️ Sending key: ${keycode}`, activePhoneId);\n    \n    try {\n      const response = await axios.post('/api/key', { \n        keycode, \n        phoneId: activePhoneId \n      });\n      \n      if (response.data.success) {\n        addLog('✅ Key event sent', activePhoneId);\n      }\n    } catch (error) {\n      addLog('❌ Failed to send key: ' + (error.response?.data?.error || error.message), activePhoneId);\n    }\n  }, [activePhoneId, addLog]);\n\n  // File upload with progress\n  const handleFileUpload = useCallback(async (file) => {\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('phoneId', activePhoneId);\n\n    addLog(`📁 Uploading file: ${file.name}`, activePhoneId);\n\n    try {\n      const response = await axios.post('/api/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n        onUploadProgress: (progressEvent) => {\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          if (percentCompleted % 25 === 0) { // Log every 25%\n            addLog(`📁 Upload progress: ${percentCompleted}%`, activePhoneId);\n          }\n        }\n      });\n      \n      if (response.data.success) {\n        addLog(`✅ File uploaded: ${response.data.path}`, activePhoneId);\n      }\n    } catch (error) {\n      addLog('❌ Failed to upload file: ' + (error.response?.data?.error || error.message), activePhoneId);\n    }\n  }, [activePhoneId, addLog]);\n\n  // Handle template selection\n  const handleTemplateSelect = useCallback((templateConfig) => {\n    setNewPhoneConfig(prev => ({\n      ...prev,\n      ...templateConfig\n    }));\n    addLog(`📱 Applied template configuration`);\n  }, [addLog]);\n\n  // Handle create phone form submission\n  const handleCreatePhone = useCallback(() => {\n    if (!newPhoneConfig.name.trim()) {\n      addLog('❌ Please enter a phone name');\n      return;\n    }\n    \n    createPhone(newPhoneConfig);\n    setShowCreateModal(false);\n    setNewPhoneConfig({\n      name: '',\n      androidVersion: 'android-34',\n      ram: '4096',\n      storage: '8192',\n      resolution: '1080x1920',\n      density: '420'\n    });\n  }, [newPhoneConfig, createPhone, addLog]);\n\n  // Add new phone - opens creation modal\n  const addNewPhone = useCallback(() => {\n    setShowCreateModal(true);\n    addLog('📱 Opening phone creation dialog...');\n  }, [addLog]);\n\n  // Batch operations\n  const handleBatchStart = useCallback(async (phoneIds) => {\n    toast.info('Batch Start', `Starting ${phoneIds.length} phones...`);\n    let successCount = 0;\n    let errorCount = 0;\n    \n    for (const phoneId of phoneIds) {\n      try {\n        await startCloudPhone(phoneId);\n        successCount++;\n      } catch (error) {\n        errorCount++;\n      }\n    }\n    \n    if (errorCount === 0) {\n      toast.success('Batch Complete', `Successfully started ${successCount} phones`);\n    } else {\n      toast.warning('Batch Partial', `Started ${successCount}, failed ${errorCount}`);\n    }\n  }, [startCloudPhone, toast]);\n\n  const handleBatchStop = useCallback(async (phoneIds) => {\n    toast.info('Batch Stop', `Stopping ${phoneIds.length} phones...`);\n    let successCount = 0;\n    let errorCount = 0;\n    \n    for (const phoneId of phoneIds) {\n      try {\n        await stopCloudPhone(phoneId);\n        successCount++;\n      } catch (error) {\n        errorCount++;\n      }\n    }\n    \n    if (errorCount === 0) {\n      toast.success('Batch Complete', `Successfully stopped ${successCount} phones`);\n    } else {\n      toast.warning('Batch Partial', `Stopped ${successCount}, failed ${errorCount}`);\n    }\n  }, [stopCloudPhone, toast]);\n\n  const handleBatchDelete = useCallback(async (phoneIds) => {\n    toast.info('Batch Delete', `Deleting ${phoneIds.length} phones...`);\n    let successCount = 0;\n    let errorCount = 0;\n    \n    for (const phoneId of phoneIds) {\n      try {\n        await deletePhone(phoneId);\n        successCount++;\n      } catch (error) {\n        errorCount++;\n      }\n    }\n    \n    setSelectedPhones([]); // Clear selection after batch delete\n    \n    if (errorCount === 0) {\n      toast.success('Batch Complete', `Successfully deleted ${successCount} phones`);\n    } else {\n      toast.warning('Batch Partial', `Deleted ${successCount}, failed ${errorCount}`);\n    }\n  }, [deletePhone, toast]);\n\n  const handleBatchClone = useCallback(async (phoneIds) => {\n    toast.info('Batch Clone', `Cloning ${phoneIds.length} phones...`);\n    let successCount = 0;\n    let errorCount = 0;\n    \n    for (const phoneId of phoneIds) {\n      try {\n        const originalPhone = phones.find(p => p.id === phoneId);\n        if (originalPhone) {\n          const cloneConfig = {\n            name: `${originalPhone.name} (Clone)`,\n            androidVersion: originalPhone.status?.androidVersion || 'android-34',\n            ram: originalPhone.status?.ramSize || '4096',\n            storage: originalPhone.status?.storageSize || '8192',\n            resolution: `${originalPhone.status?.screenWidth}x${originalPhone.status?.screenHeight}` || '1080x1920',\n            density: originalPhone.status?.density?.toString() || '420'\n          };\n          await createPhone(cloneConfig);\n          successCount++;\n        }\n      } catch (error) {\n        errorCount++;\n      }\n    }\n    \n    if (errorCount === 0) {\n      toast.success('Batch Complete', `Successfully cloned ${successCount} phones`);\n    } else {\n      toast.warning('Batch Partial', `Cloned ${successCount}, failed ${errorCount}`);\n    }\n  }, [phones, createPhone, toast]);\n\n  // Remove phone\n  const removePhone = useCallback((phoneId) => {\n    deletePhone(phoneId);\n  }, [deletePhone]);\n\n  // Initial phones fetch\n  useEffect(() => {\n    fetchPhones();\n  }, []);\n\n  // Auto-refresh status every 30 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      phones.forEach(phone => {\n        if (phone.status?.running) {\n          fetchStatus(phone.id);\n        }\n      });\n    }, 30000);\n\n    return () => clearInterval(interval);\n  }, [phones, fetchStatus]);\n\n  return (\n    <AppContainer>\n      {globalLoading && (\n        <LoadingOverlay>\n          <div style={{ textAlign: 'center', color: 'white' }}>\n            <LoadingSpinner />\n            <div style={{ marginTop: '20px', fontSize: '18px' }}>\n              Processing...\n            </div>\n          </div>\n        </LoadingOverlay>\n      )}\n\n      <Header>\n        <Logo>\n          📱 Cloud Android Phone\n        </Logo>\n        \n        <PhoneManagerContainer>\n          {phones.map(phone => (\n            <PhoneTab\n              key={phone.id}\n              active={phone.id === activePhoneId}\n              onClick={() => setActivePhoneId(phone.id)}\n            >\n              <input\n                type=\"checkbox\"\n                checked={selectedPhones.includes(phone.id)}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  if (e.target.checked) {\n                    setSelectedPhones(prev => [...prev, phone.id]);\n                  } else {\n                    setSelectedPhones(prev => prev.filter(id => id !== phone.id));\n                  }\n                }}\n                style={{ \n                  marginRight: '8px', \n                  accentColor: '#4CAF50',\n                  cursor: 'pointer'\n                }}\n              />\n              <StatusDot running={phone.status?.running} />\n              {phone.name}\n              {phones.length > 1 && (\n                <span \n                  onClick={(e) => {\n                    e.stopPropagation();\n                    removePhone(phone.id);\n                  }}\n                  style={{ marginLeft: '5px', cursor: 'pointer' }}\n                >\n                  ×\n                </span>\n              )}\n            </PhoneTab>\n          ))}\n          \n          <AddPhoneButton onClick={addNewPhone}>\n            ➕ Add Phone\n          </AddPhoneButton>\n          \n          <AddPhoneButton onClick={() => setShowSystemMonitor(!showSystemMonitor)}>\n            📊 Monitor\n          </AddPhoneButton>\n          \n          <StatusIndicator running={activePhone.status?.running}>\n            <StatusDot running={activePhone.status?.running} />\n            {activePhone.status?.running ? 'Online' : 'Offline'}\n          </StatusIndicator>\n        </PhoneManagerContainer>\n        \n        {phones.length > 0 && (\n          <BatchOperations\n            phones={phones}\n            selectedPhones={selectedPhones}\n            setSelectedPhones={setSelectedPhones}\n            onBatchStart={handleBatchStart}\n            onBatchStop={handleBatchStop}\n            onBatchDelete={handleBatchDelete}\n            onBatchClone={handleBatchClone}\n          />\n        )}\n      </Header>\n\n      <MainContent>\n        <ControlPanel\n          status={activePhone.status}\n          onSendText={sendText}\n          onTap={sendTap}\n          onKeyEvent={sendKeyEvent}\n          onFileUpload={handleFileUpload}\n          onStartPhone={() => startCloudPhone(activePhoneId)}\n          onStopPhone={() => stopCloudPhone(activePhoneId)}\n          logs={logs}\n        />\n\n        <PhoneScreenContainer>\n          {showSystemMonitor ? (\n            <SystemMonitor phones={phones} />\n          ) : (\n            <PhoneScreen\n              status={activePhone.status}\n              onTap={sendTap}\n              onHomePress={() => sendKeyEvent(3)}\n            />\n          )}\n        </PhoneScreenContainer>\n      </MainContent>\n\n      {/* Toast Notifications */}\n      <ToastNotifications toasts={toast.toasts} removeToast={toast.removeToast} />\n\n      {/* Create Phone Modal */}\n      {showCreateModal && (\n        <CreatePhoneModal onClick={() => setShowCreateModal(false)}>\n          <ModalContent onClick={(e) => e.stopPropagation()}>\n            <ModalTitle>📱 Create New Android Phone</ModalTitle>\n            \n            <PhoneTemplates onSelectTemplate={handleTemplateSelect} />\n            \n            <FormGroup>\n              <Label>Phone Name</Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Enter phone name (e.g., My Phone 2)\"\n                value={newPhoneConfig.name}\n                onChange={(e) => setNewPhoneConfig(prev => ({ ...prev, name: e.target.value }))}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Label>Android Version</Label>\n              <Select\n                value={newPhoneConfig.androidVersion}\n                onChange={(e) => setNewPhoneConfig(prev => ({ ...prev, androidVersion: e.target.value }))}\n              >\n                <option value=\"android-34\">Android 14 (Latest)</option>\n                <option value=\"android-33\">Android 13</option>\n                <option value=\"android-32\">Android 12</option>\n                <option value=\"android-31\">Android 11</option>\n              </Select>\n            </FormGroup>\n            \n            <FormGroup>\n              <Label>RAM (MB)</Label>\n              <Select\n                value={newPhoneConfig.ram}\n                onChange={(e) => setNewPhoneConfig(prev => ({ ...prev, ram: e.target.value }))}\n              >\n                <option value=\"2048\">2GB RAM</option>\n                <option value=\"4096\">4GB RAM (Recommended)</option>\n                <option value=\"6144\">6GB RAM</option>\n                <option value=\"8192\">8GB RAM (High Performance)</option>\n                <option value=\"16384\">16GB RAM (Ultra Performance)</option>\n              </Select>\n            </FormGroup>\n            \n            <FormGroup>\n              <Label>Storage (MB)</Label>\n              <Select\n                value={newPhoneConfig.storage}\n                onChange={(e) => setNewPhoneConfig(prev => ({ ...prev, storage: e.target.value }))}\n              >\n                <option value=\"4096\">4GB Storage</option>\n                <option value=\"8192\">8GB Storage (Recommended)</option>\n                <option value=\"16384\">16GB Storage</option>\n                <option value=\"32768\">32GB Storage</option>\n                <option value=\"65536\">64GB Storage</option>\n              </Select>\n            </FormGroup>\n            \n            <FormGroup>\n              <Label>Screen Resolution</Label>\n              <Select\n                value={newPhoneConfig.resolution}\n                onChange={(e) => setNewPhoneConfig(prev => ({ ...prev, resolution: e.target.value }))}\n              >\n                <option value=\"720x1280\">720x1280 (HD)</option>\n                <option value=\"1080x1920\">1080x1920 (Full HD)</option>\n                <option value=\"1440x2560\">1440x2560 (2K)</option>\n                <option value=\"1440x3120\">1440x3120 (2K+)</option>\n              </Select>\n            </FormGroup>\n            \n            <ModalButtons>\n              <ModalButton onClick={() => setShowCreateModal(false)}>\n                Cancel\n              </ModalButton>\n              <ModalButton primary onClick={handleCreatePhone}>\n                Create Phone\n              </ModalButton>\n            </ModalButtons>\n          </ModalContent>\n        </CreatePhoneModal>\n      )}\n    </AppContainer>\n  );\n};\n\nexport default CloudAndroidPhone;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}